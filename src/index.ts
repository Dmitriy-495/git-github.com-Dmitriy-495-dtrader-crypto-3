import { config } from "./core/config";
import { EventBus } from "./core/event-bus";
import { AppEvents } from "./core/types";

// –ø–æ–¥–∫–ª—é—á–∞–µ–º terminal-kit —Å—Ç—Ä–æ–≥–æ —á–µ—Ä–µ–∑ require
// (–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å)
const termkit = require("terminal-kit");
const terminal = termkit.terminal;

const bus = new EventBus<AppEvents>();

// —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
bus.on("app:start", ({ name, version }) => {
  console.log(
    `üöÄ [${config.logLevel}] –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "${name}" v${version} –∑–∞–ø—É—â–µ–Ω–æ`
  );
});
bus.emit("app:start", {
  name: config.appName,
  version: config.version,
});

// –æ—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω –∏ –≤—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
terminal.clear();
terminal.green("Hello from terminal-kit! üëã\n");

// —Å–æ–±—ã—Ç–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
bus.on("terminal:ready", ({ columns, rows }) => {
  console.log(`üñ• –†–∞–∑–º–µ—Ä —Ç–µ—Ä–º–∏–Ω–∞–ª–∞: ${columns}√ó${rows}`);
});
bus.emit("terminal:ready", {
  columns: terminal.width,
  rows: terminal.height,
});

// –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —à–∏–Ω—ã
bus.on("bus:message", ({ channel, payload }) => {
  console.log(`üì® [${channel}]`, payload);
});
bus.emit("bus:message", {
  channel: "system",
  payload: { ok: true },
});

// –ª–æ–≥-—Å–æ–±—ã—Ç–∏–µ
bus.on("log", ({ level, message, meta }) => {
  console[level](`[${level}] ${message}`, meta ?? "");
});
bus.emit("log", {
  level: "info",
  message: "Initialized",
  meta: {
    pid: process.pid,
    gateApiKey: config.gateApiKey ? "***" : "none",
  },
});
